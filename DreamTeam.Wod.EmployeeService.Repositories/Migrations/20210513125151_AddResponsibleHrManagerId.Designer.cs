// <auto-generated />
using System;
using DreamTeam.Wod.EmployeeService.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DreamTeam.Wod.EmployeeService.Repositories.Migrations
{
    [DbContext(typeof(EmployeeServiceDbContext))]
    [Migration("20210513125151_AddResponsibleHrManagerId")]
    partial class AddResponsibleHrManagerId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryId")
                        .HasMaxLength(64);

                    b.Property<DateTime?>("DismissalDate");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("EmploymentDate");

                    b.Property<string>("ExternalId")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Location");

                    b.Property<DateTime?>("NextPrDate");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(64);

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int?>("ResponsibleHrManagerId");

                    b.Property<int?>("SeniorityId");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("DomainName")
                        .IsUnique();

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.HasIndex("ResponsibleHrManagerId");

                    b.HasIndex("SeniorityId");

                    b.HasIndex("IsActive", "UnitId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("RoleId");

                    b.HasKey("EmployeeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Internship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(254);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("ExternalId")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("FirstNameLocal")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("LastNameLocal")
                        .HasMaxLength(200);

                    b.Property<string>("Location")
                        .HasMaxLength(100);

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Phone")
                        .HasMaxLength(64);

                    b.Property<string>("PhotoId")
                        .HasMaxLength(64);

                    b.Property<string>("Skype")
                        .HasMaxLength(256);

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Telegram")
                        .HasMaxLength(32);

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("DomainName");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Internship");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("HasSeniority");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Seniority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExternalId")
                        .IsRequired();

                    b.Property<bool>("IsHidden");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Order");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Seniority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExternalId = "junior",
                            IsHidden = false,
                            Name = "Junior",
                            Order = 1
                        },
                        new
                        {
                            Id = 2,
                            ExternalId = "middle",
                            IsHidden = true,
                            Name = "Middle",
                            Order = 2
                        },
                        new
                        {
                            Id = 3,
                            ExternalId = "senior",
                            IsHidden = false,
                            Name = "Senior",
                            Order = 3
                        },
                        new
                        {
                            Id = 4,
                            ExternalId = "lead",
                            IsHidden = false,
                            Name = "Lead",
                            Order = 4
                        });
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Employee", b =>
                {
                    b.HasOne("DreamTeam.Wod.EmployeeService.DomainModel.Employee", "ResponsibleHrManager")
                        .WithMany()
                        .HasForeignKey("ResponsibleHrManagerId");

                    b.HasOne("DreamTeam.Wod.EmployeeService.DomainModel.Seniority", "Seniority")
                        .WithMany()
                        .HasForeignKey("SeniorityId");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.EmployeeRole", b =>
                {
                    b.HasOne("DreamTeam.Wod.EmployeeService.DomainModel.Employee", "Employee")
                        .WithMany("Roles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DreamTeam.Wod.EmployeeService.DomainModel.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
