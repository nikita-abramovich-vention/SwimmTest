// <auto-generated />
using System;
using DreamTeam.Wod.EmployeeService.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DreamTeam.Wod.EmployeeService.Repositories.Migrations
{
    [DbContext(typeof(EmployeeServiceDbContext))]
    [Migration("20191010142005_AddNameAndContactsToInternship")]
    partial class AddNameAndContactsToInternship
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<DateTime?>("DismissalDate");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("EmploymentDate");

                    b.Property<string>("ExternalId")
                        .IsRequired();

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsActive");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("TitleId");

                    b.HasKey("Id");

                    b.HasIndex("DomainName")
                        .IsUnique();

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.HasIndex("TitleId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("RoleId");

                    b.HasKey("EmployeeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Internship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasMaxLength(254);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("ExternalId")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .HasMaxLength(200);

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(200);

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Phone")
                        .HasMaxLength(64);

                    b.Property<string>("PhotoId")
                        .HasMaxLength(64);

                    b.Property<string>("Skype")
                        .HasMaxLength(256);

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Internship");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("ExternalId")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Title");
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.Employee", b =>
                {
                    b.HasOne("DreamTeam.Wod.EmployeeService.DomainModel.Title", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DreamTeam.Wod.EmployeeService.DomainModel.EmployeeRole", b =>
                {
                    b.HasOne("DreamTeam.Wod.EmployeeService.DomainModel.Employee", "Employee")
                        .WithMany("Roles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DreamTeam.Wod.EmployeeService.DomainModel.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
